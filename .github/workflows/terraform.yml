name: 'Terraform'

on: [push, pull_request]
# see: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule
# on:
#   schedule:
#     - cron: "15 4,5 * * *"   # <=== Change this value

env:
  TF_LOG: INFO

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./main

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.11.4

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      env:
        BUCKET: ${{ secrets.BUCKET }}
        KEY: ${{ secrets.KEY }}
        REGION: ${{ secrets.REGION }}
        TABLESTORE_ENDPOINT: ${{ secrets.TABLESTORE_ENDPOINT }}
        TABLESTORE_TABLE: ${{ secrets.STORAGE_ACCOUNT }}
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY" -backend-config="bucket=$BUCKET" -backend-config="prefix=" -backend-config="key=$KEY" -backend-config="region=$REGION" -backend-config="tablestore_endpoint=$TABLESTORE_ENDPOINT" -backend-config="tablestore_table=$TABLESTORE_TABLE"


    # Run a terraform plan for pull requests only
    - name: Terraform Plan
      id: plan
      env:
        BUCKET: ${{ secrets.BUCKET }}
        KEY: ${{ secrets.KEY }}
        REGION: ${{ secrets.REGION }}
        TABLESTORE_ENDPOINT: ${{ secrets.TABLESTORE_ENDPOINT }}
        TABLESTORE_TABLE: ${{ secrets.STORAGE_ACCOUNT }}
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      # if: github.event_name == 'pull_request'
      run: terraform plan -no-color

      # On push to main, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      env:
        BUCKET: ${{ secrets.BUCKET }}
        KEY: ${{ secrets.KEY }}
        REGION: ${{ secrets.REGION }}
        TABLESTORE_ENDPOINT: ${{ secrets.TABLESTORE_ENDPOINT }}
        TABLESTORE_TABLE: ${{ secrets.STORAGE_ACCOUNT }}
        ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
    
    # # Add a comment to pull requests with plan results
    # - name: add-plan-comment
    #   id: comment
    #   uses: actions/github-script@v3
    #   if: github.event_name == 'pull_request'
    #   env:
    #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
    #       #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
    #       #### Terraform Validation 🤖${{ steps.validate.outputs.stdout }}
    #       #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
      
    #       <details><summary>Show Plan</summary>
          
    #       \`\`\`${process.env.PLAN}\`\`\`
          
    #       </details>
          
    #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
    #       github.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: output
    #       })
